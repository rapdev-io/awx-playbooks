---
- name: Install Rubrik
  hosts: all
  gather_facts: false
  tasks:
    - name: Download File
      win_get_url:
        url: {{rubrik_cluster}}/connector/RubrikBackupService.zip
        dest: C:\\Windows\\Temp\\
        
    - name: Unzip file
      win_unzip:
        src: C:\Windows\Temp\RubrikBackupService.zip
        dest: C:\Windows\Temp\Rubrik
        
    - name: Install .msi
      ansible.windows.win_powershell:
        script: |
          msiexec.exe /i "C:\Windows\Temp\Rubrik\RubrikBackupService.msi" /qn
          
    - name: Cleanup Files
      ansible.windows.win_powershell:
        script: |
           Remove-Item C:\Windows\Temp\RubrikBackupService.zip
           
    - name: Verify/Add Rubrik Windows User
      ansible.windows.win_user:
        name: "{{ sql_user }}"
        state: present
        update_password: on_create
        password: "{{ sql_password }}"
        
    - name: Add Rubrik Windows User to Admin Group
      ansible.windows.win_powershell:
        script: |
          Add-LocalGroupMember -Group "Administrators" -Member "{{ sql_user }}"
           
    - name: "Give Rubrik Windows User 'Log on as Service' Rights"
      ansible.windows.win_user_right:
        name: SeServiceLogonRight
        users: "{{ sql_user }}"
        action: add
        
    - name: Run SQL Query to give Rubrik Windows User SA in SQL
      ansible.windows.win_powershell:
        script: |
          Invoke-Sqlcmd -Query `
          "IF NOT EXISTS(
          SELECT name
          FROM [master].[sys].[syslogins]
          WHERE NAME = '{{sql_dns}}\{{sql_user}}')
          Begin
              CREATE LOGIN [{{sql_dns}}\{{sql_user}}] FROM WINDOWS WITH DEFAULT_DATABASE= master
              ALTER SERVER ROLE [sysadmin]
              ADD MEMBER [{{sql_dns}}\{{sql_user}}]
          End"
        
    - name: Stop Service
      ansible.windows.win_powershell:
        script: |
           stop-service 'Rubrik Backup Service' -Force
        
    - name: Start Service with Rubrik SA
      ansible.windows.win_service:
        name: 'Rubrik Backup service'
        state: started
        username: "{{ sql_user }}"
        password: "{{ sql_password }}"
